package uiDisplay

import _ "embed"

const (
	ToastSizeXs string = "xs"
	ToastSizeSm string = "sm"
	ToastSizeMd string = "md"
	ToastSizeLg string = "lg"

	ToastRingThicknessXs string = "xs"
	ToastRingThicknessSm string = "sm"
	ToastRingThicknessMd string = "md"
	ToastRingThicknessLg string = "lg"
	ToastRingThicknessXl string = "xl"

	ToastRadiusNone string = "none"
	ToastRadiusXs   string = "xs"
	ToastRadiusSm   string = "sm"
	ToastRadiusMd   string = "md"
	ToastRadiusLg   string = "lg"
	ToastRadiusXl   string = "xl"
	ToastRadiusFull string = "full"
)

//go:embed toastState.js
var toastAlpineState string

type ToastSettings struct {
	// OptionalFields
	BackgroundColor string
	TextColor       string
	Size            string
	RingThickness   string
	RingColor       string
	Radius          string
}

templ Toast(componentSettings ToastSettings) {
	<!-- Toast JavaScript -->
	@templ.Raw(`<script type="text/javascript">` + toastAlpineState + `</script>`)
	<!-- Toast HTML -->
	{{ toastClasses := "fixed bottom-5 right-10 flex w-fit flex-row items-center justify-stretch shadow-md z-100" }}
	{{ toastIconSizeClasses := "text-2xl" }}
	if componentSettings.Size == "" {
		{{ componentSettings.Size = ToastSizeMd }}
	}
	switch componentSettings.Size {
		case ToastSizeXs:
			{{ toastClasses += " p-1 text-xs gap-1.5" }}
			{{ toastIconSizeClasses = "text-lg" }}
		case ToastSizeSm:
			{{ toastClasses += " p-1.5 text-sm gap-2" }}
			{{ toastIconSizeClasses = "text-xl" }}
		case ToastSizeMd:
			{{ toastClasses += " p-2 text-base gap-2.5" }}
			{{ toastIconSizeClasses = "text-2xl" }}
		case ToastSizeLg:
			{{ toastClasses += " p-2.5 text-lg gap-3" }}
			{{ toastIconSizeClasses = "text-3xl" }}
	}
	{{ toastRingThickness := "ring-0" }}
	if componentSettings.RingThickness != "" {
		switch componentSettings.RingThickness {
			case ToastRingThicknessXs:
				{{ toastRingThickness = "ring-1" }}
			case ToastRingThicknessSm:
				{{ toastRingThickness = "ring-1.5" }}
			case ToastRingThicknessMd:
				{{ toastRingThickness = "ring-2" }}
			case ToastRingThicknessLg:
				{{ toastRingThickness = "ring-2.5" }}
			case ToastRingThicknessXl:
				{{ toastRingThickness = "ring-3" }}
		}
	}
	{{ toastRingColor := "" }}
	if componentSettings.RingColor != "" {
		{{ toastRingColor = " ring-" + componentSettings.RingColor }}
	}
	{{ toastRadius := "rounded" }}
	switch componentSettings.Radius {
		case ToastRadiusNone:
			{{ toastRadius = "rounded-none" }}
		case ToastRadiusXs:
			{{ toastRadius = "rounded-xs" }}
		case ToastRadiusSm:
			{{ toastRadius = "rounded-sm" }}
		case ToastRadiusMd:
			{{ toastRadius = "rounded-md" }}
		case ToastRadiusLg:
			{{ toastRadius = "rounded-lg" }}
		case ToastRadiusXl:
			{{ toastRadius = "rounded-xl" }}
		case ToastRadiusFull:
			{{ toastRadius = "rounded-full" }}
	}
	{{ toastClasses += " " + toastRingThickness + toastRingColor + " " + toastRadius }}
	{{ toastBackgroundColor := "primary-300" }}
	if componentSettings.BackgroundColor != "" {
		{{ toastBackgroundColor = componentSettings.BackgroundColor }}
	}
	{{ toastClasses += " bg-" + toastBackgroundColor }}
	{{ toastTextColor := "text-neutral-50" }}
	if componentSettings.TextColor != "" {
		{{ toastTextColor = "text-" + componentSettings.TextColor }}
	}
	{{ toastClasses += " " + toastTextColor }}
	<div
		id="toast"
		class={ toastClasses }
		x-data
		x-show="$store.toast.toastVisible"
		x-transition
		x-cloak
		un-cloak
		role="alert"
	>
		{{ toastIconClasses := "ph-duotone rounded p-2 " + toastIconSizeClasses }}
		<i x-show="$store.toast.toastType == 'success'" class={ "ph-seal-check bg-green-800 " + toastIconClasses }></i>
		<i x-show="$store.toast.toastType == 'partialSuccess'" class={ "ph-seal-warning bg-yellow-800 " + toastIconClasses }></i>
		<i x-show="$store.toast.toastType == 'danger'" class={ "ph-warning-octagon bg-red-800 " + toastIconClasses }></i>
		<div x-text="$store.toast.toastMessage"></div>
		<i
			@click="$store.toast.clearToast()"
			class="ph-bold ph-x cursor-pointer rounded p-1 text-xs hover:opacity-75"
		></i>
	</div>
}
