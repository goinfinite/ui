// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package uiDisplay

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

type SidebarSettings struct {
	MiddleContent templ.Component

	// OptionalFields
	Width                      string
	BackgroundColor            string
	HeaderContent              templ.Component
	FooterContent              templ.Component
	IsVisibleTwoWayStatePath   string
	IsCollapsed                bool
	IsCollapsedTwoWayStatePath string
	IsSticky                   bool
	IsStickyTwoWayStatePath    string
}

func Sidebar(componentSettings SidebarSettings) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Sidebar -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		sidebarClasses := "h-screen flex flex-col"
		sidebarWidthClass := "w-64"
		if componentSettings.Width != "" {
			sidebarWidthClass = componentSettings.Width
		}
		sidebarClasses += " " + sidebarWidthClass
		sidebarBackgroundColorClass := "neutral-900/10"
		if componentSettings.BackgroundColor != "" {
			sidebarBackgroundColorClass = componentSettings.BackgroundColor
		}
		sidebarClasses += " " + sidebarBackgroundColorClass
		if componentSettings.IsSticky {
			sidebarClasses += " sticky"
		}
		if componentSettings.IsCollapsed {
			sidebarClasses += " !w-32"
		}
		sidebarDynamicClasses := "{"
		if componentSettings.IsVisibleTwoWayStatePath != "" {
			sidebarDynamicClasses += "'invisible': " + componentSettings.IsVisibleTwoWayStatePath + ","
		}
		if componentSettings.IsCollapsedTwoWayStatePath != "" {
			sidebarDynamicClasses += "'!w-32': " + componentSettings.IsCollapsedTwoWayStatePath + ","
		}
		if componentSettings.IsStickyTwoWayStatePath != "" {
			sidebarDynamicClasses += "'sticky': " + componentSettings.IsStickyTwoWayStatePath + ","
		}
		sidebarDynamicClasses += "}"
		var templ_7745c5c3_Var2 = []any{sidebarClasses}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<aside class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/sidebar.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" :class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(sidebarDynamicClasses)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/sidebar.templ`, Line: 52, Col: 63}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\"><!-- HeaderContent -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.HeaderContent != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div class=\"flex-1 items-center justify-between\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = componentSettings.HeaderContent.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<!-- Middle Content --><button @click=\"scrollMiddleContentToTop()\" class=\"mt-2 hidden rounded-full p-2 transition-all\"><i class=\"ph-duotone ph-arrow-fat-up block\"></i></button><div class=\"flex-1 overflow-y-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = componentSettings.MiddleContent.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div><!-- FooterContent -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.FooterContent != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<div class=\"flex-1 items-center justify-between\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = componentSettings.FooterContent.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</aside>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
