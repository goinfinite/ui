// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package uiDisplay

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

const (
	TagSizeXs string = "xs"
	TagSizeSm string = "sm"
	TagSizeMd string = "md"
	TagSizeLg string = "lg"
	TagSizeXl string = "xl"

	TagRadiusNone string = "none"
	TagRadiusXs   string = "xs"
	TagRadiusSm   string = "sm"
	TagRadiusMd   string = "md"
	TagRadiusLg   string = "lg"
	TagRadiusXl   string = "xl"
	TagRadiusFull string = "full"
)

type TagSettings struct {
	// OptionalFields
	Size                  string
	OuterBackgroundColor  string
	OuterTextColor        string
	OuterLeftIcon         string
	OuterLeftOnClickFunc  string
	OuterLeftLabel        string
	OuterRightIcon        string
	OuterRightLabel       string
	OuterRightOnClickFunc string
	OuterRadius           string
	InnerIcon             string
	InnerLabel            string
	InnerBackgroundColor  string
	InnerTextColor        string
	InnerRadius           string
}

func Tag(componentSettings TagSettings) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Tag -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		initialOuterSizeClasses := "ring-1 text-base px-2 py-1 gap-1"
		switch componentSettings.Size {
		case TagSizeXs:
			initialOuterSizeClasses = "ring-0.25 text-xs px-2 py-1 gap-1"
		case TagSizeSm:
			initialOuterSizeClasses = "ring-0.5 text-sm px-2 py-1 gap-1.5"
		case TagSizeMd:
			initialOuterSizeClasses = "ring-1 text-base px-2 py-1 gap-1.5"
		case TagSizeLg:
			initialOuterSizeClasses = "ring-1.5 text-lg px-3 py-1.5 gap-2"
		case TagSizeXl:
			initialOuterSizeClasses = "ring-2 text-xl px-3 py-1.5 gap-2"
		}
		initialOuterBackgroundColor := "secondary-500"
		if componentSettings.OuterBackgroundColor != "" {
			initialOuterBackgroundColor = componentSettings.OuterBackgroundColor
		}
		initialOuterTextColor := "neutral-50"
		if componentSettings.OuterTextColor != "" {
			initialOuterTextColor = componentSettings.OuterTextColor
		}
		initialOuterRadius := "rounded"
		switch componentSettings.OuterRadius {
		case TagRadiusNone:
			initialOuterRadius = "rounded-none"
		case TagRadiusXs:
			initialOuterRadius = "rounded-xs"
		case TagRadiusSm:
			initialOuterRadius = "rounded-sm"
		case TagRadiusMd:
			initialOuterRadius = "rounded-md"
		case TagRadiusLg:
			initialOuterRadius = "rounded-lg"
		case TagRadiusXl:
			initialOuterRadius = "rounded-xl"
		case TagRadiusFull:
			initialOuterRadius = "rounded-full"
		}

		initialOuterClasses := initialOuterSizeClasses + " " +
			" ring-" + initialOuterBackgroundColor + " bg-" + initialOuterBackgroundColor +
			" text-" + initialOuterTextColor +
			" " + initialOuterRadius
		initialInnerSizeClasses := "text-base px-2 py-1"
		switch componentSettings.Size {
		case TagSizeXs:
			initialInnerSizeClasses = "text-xs px-2 py-1"
		case TagSizeSm:
			initialInnerSizeClasses = "text-sm px-2 py-1"
		case TagSizeMd:
			initialInnerSizeClasses = "text-base px-2 py-1"
		case TagSizeLg:
			initialInnerSizeClasses = "text-lg px-3 py-1.5"
		case TagSizeXl:
			initialInnerSizeClasses = "text-xl px-3 py-1.5"
		}
		initialInnerBackgroundColor := "neutral-50/10"
		if componentSettings.InnerBackgroundColor != "" {
			initialInnerBackgroundColor = componentSettings.InnerBackgroundColor
		}

		initialInnerClasses := initialInnerSizeClasses + " " + "bg-" + initialInnerBackgroundColor
		var templ_7745c5c3_Var2 = []any{"flex items-center w-fit " + initialOuterClasses}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"><div class=\"flex items-center gap-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.OuterLeftIcon != "" {
			var templ_7745c5c3_Var4 = []any{"ph-bold " + componentSettings.OuterLeftIcon + " text-lg"}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var4...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<i class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var4).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"></i> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.OuterLeftLabel != "" {
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.OuterLeftLabel)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 110, Col: 38}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 = []any{"flex items-center w-fit " + initialInnerClasses}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var7...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var7).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.InnerIcon != "" {
			var templ_7745c5c3_Var9 = []any{"ph-bold " + componentSettings.InnerIcon + " text-lg"}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var9...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<i class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var9).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\"></i> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.InnerLabel != "" {
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.InnerLabel)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 118, Col: 34}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
