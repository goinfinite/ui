// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package uiDisplay

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

const (
	TagSizeXs string = "xs"
	TagSizeSm string = "sm"
	TagSizeMd string = "md"
	TagSizeLg string = "lg"
	TagSizeXl string = "xl"

	TagRingThicknessXs string = "xs"
	TagRingThicknessSm string = "sm"
	TagRingThicknessMd string = "md"
	TagRingThicknessLg string = "lg"
	TagRingThicknessXl string = "xl"

	TagRadiusNone string = "none"
	TagRadiusXs   string = "xs"
	TagRadiusSm   string = "sm"
	TagRadiusMd   string = "md"
	TagRadiusLg   string = "lg"
	TagRadiusXl   string = "xl"
	TagRadiusFull string = "full"
)

type TagSettings struct {
	// OptionalFields
	Size                           string
	OuterRingThickness             string
	OuterRingColor                 string
	OuterBackgroundColor           string
	OuterTextColor                 string
	OuterLeftIcon                  string
	OuterLeftLabel                 string
	OuterLeftLabelOneWayStatePath  string
	OuterLeftOnClickFunc           string
	OuterRightIcon                 string
	OuterRightLabel                string
	OuterRightLabelOneWayStatePath string
	OuterRightOnClickFunc          string
	OuterRadius                    string
	InnerIcon                      string
	InnerLabel                     string
	InnerLabelOneWayStatePath      string
	InnerBackgroundColor           string
	InnerTextColor                 string
	InnerRadius                    string
}

func Tag(componentSettings TagSettings) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Tag -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		initialOuterSizeClasses := "text-base p-1.25 gap-1.25"
		switch componentSettings.Size {
		case TagSizeXs:
			initialOuterSizeClasses = "text-xs p-0.75 gap-0.75"
		case TagSizeSm:
			initialOuterSizeClasses = "text-sm p-1 gap-1"
		case TagSizeMd:
			initialOuterSizeClasses = "text-base p-1 gap-1"
		case TagSizeLg:
			initialOuterSizeClasses = "text-lg p-1.25 gap-1.25"
		case TagSizeXl:
			initialOuterSizeClasses = "text-xl p-1.25 gap-1.25"
		}
		initialOuterRingThickness := "ring-2"
		if componentSettings.OuterRingThickness != "" {
			switch componentSettings.OuterRingThickness {
			case TagRingThicknessXs:
				initialOuterRingThickness = "ring-1"
			case TagRingThicknessSm:
				initialOuterRingThickness = "ring-1.5"
			case TagRingThicknessMd:
				initialOuterRingThickness = "ring-2"
			case TagRingThicknessLg:
				initialOuterRingThickness = "ring-2.5"
			case TagRingThicknessXl:
				initialOuterRingThickness = "ring-3"
			}
		} else {
			switch componentSettings.Size {
			case TagSizeXs:
				initialOuterRingThickness = "ring-1"
			case TagSizeSm:
				initialOuterRingThickness = "ring-1.5"
			case TagSizeMd:
				initialOuterRingThickness = "ring-2"
			case TagSizeLg:
				initialOuterRingThickness = "ring-2.5"
			case TagSizeXl:
				initialOuterRingThickness = "ring-3"
			}
		}
		initialOuterSizeClasses += " " + initialOuterRingThickness
		initialOuterRingColor := "secondary-500"
		initialOuterBackgroundColor := "secondary-500"
		if componentSettings.OuterRingColor != "" {
			initialOuterRingColor = componentSettings.OuterRingColor
		}
		if componentSettings.OuterBackgroundColor != "" {
			initialOuterBackgroundColor = componentSettings.OuterBackgroundColor
			if componentSettings.OuterRingColor == "" {
				initialOuterRingColor = componentSettings.OuterBackgroundColor
			}
		}
		initialOuterTextColor := "neutral-50"
		if componentSettings.OuterTextColor != "" {
			initialOuterTextColor = componentSettings.OuterTextColor
		}
		initialOuterRadius := "rounded"
		switch componentSettings.OuterRadius {
		case TagRadiusNone:
			initialOuterRadius = "rounded-none"
		case TagRadiusXs:
			initialOuterRadius = "rounded-xs"
		case TagRadiusSm:
			initialOuterRadius = "rounded-sm"
		case TagRadiusMd:
			initialOuterRadius = "rounded-md"
		case TagRadiusLg:
			initialOuterRadius = "rounded-lg"
		case TagRadiusXl:
			initialOuterRadius = "rounded-xl"
		case TagRadiusFull:
			initialOuterRadius = "rounded-full"
		}

		initialOuterClasses := initialOuterSizeClasses + " " +
			" ring-" + initialOuterRingColor + " bg-" + initialOuterBackgroundColor +
			" text-" + initialOuterTextColor +
			" " + initialOuterRadius
		initialInnerSizeClasses := "text-base p-1.5 gap-1.5"
		switch componentSettings.Size {
		case TagSizeXs:
			initialInnerSizeClasses = "text-xs p-1 gap-1"
		case TagSizeSm:
			initialInnerSizeClasses = "text-sm p-1.25 gap-1.25"
		case TagSizeMd:
			initialInnerSizeClasses = "text-base p-1.25 gap-1.25"
		case TagSizeLg:
			initialInnerSizeClasses = "text-lg p-1.5 gap-1.5"
		case TagSizeXl:
			initialInnerSizeClasses = "text-xl p-1.5 gap-1.5"
		}
		initialInnerBackgroundColor := "neutral-50/10"
		if componentSettings.InnerBackgroundColor != "" {
			initialInnerBackgroundColor = componentSettings.InnerBackgroundColor
		}
		initialInnerTextColor := "neutral-50"
		if componentSettings.InnerTextColor != "" {
			initialInnerTextColor = componentSettings.InnerTextColor
		}
		initialInnerRadius := "rounded"
		switch componentSettings.InnerRadius {
		case TagRadiusNone:
			initialInnerRadius = "rounded-none"
		case TagRadiusXs:
			initialInnerRadius = "rounded-xs"
		case TagRadiusSm:
			initialInnerRadius = "rounded-sm"
		case TagRadiusMd:
			initialInnerRadius = "rounded-md"
		case TagRadiusLg:
			initialInnerRadius = "rounded-lg"
		case TagRadiusXl:
			initialInnerRadius = "rounded-xl"
		case TagRadiusFull:
			initialInnerRadius = "rounded-full"
		}

		initialInnerClasses := initialInnerSizeClasses + " " +
			"bg-" + initialInnerBackgroundColor +
			" text-" + initialInnerTextColor +
			" " + initialInnerRadius
		var templ_7745c5c3_Var2 = []any{"flex items-center w-fit " + initialOuterClasses}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		outerLeftItemsClasses := "flex items-center gap-0.75"
		if componentSettings.OuterLeftOnClickFunc != "" {
			outerLeftItemsClasses += " select-none cursor-pointer hover:opacity-80 transition-opacity"
		}
		var templ_7745c5c3_Var4 = []any{outerLeftItemsClasses}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var4...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var4).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.OuterLeftOnClickFunc != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.OuterLeftOnClickFunc)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 183, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, ">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.OuterLeftIcon != "" {
			var templ_7745c5c3_Var7 = []any{"ph-bold " + componentSettings.OuterLeftIcon + " text-lg"}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var7...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<i class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var7).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\"></i> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.OuterLeftLabel != "" {
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.OuterLeftLabel)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 190, Col: 38}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.OuterLeftLabelOneWayStatePath != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<span x-text=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.OuterLeftLabelOneWayStatePath)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 193, Col: 66}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\"></span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var11 = []any{"flex items-center w-fit " + initialInnerClasses}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var11...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var12 string
		templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var11).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.InnerIcon != "" {
			var templ_7745c5c3_Var13 = []any{"ph-bold " + componentSettings.InnerIcon + " text-lg"}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var13...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<i class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 string
			templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var13).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "\"></i> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.InnerLabel != "" {
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.InnerLabel)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 201, Col: 34}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.InnerLabelOneWayStatePath != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "<span x-text=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 string
			templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.InnerLabelOneWayStatePath)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 204, Col: 62}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "\"></span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.OuterRightIcon != "" || componentSettings.OuterRightLabel != "" || componentSettings.OuterRightLabelOneWayStatePath != "" {
			outerRightItemsClasses := "flex items-center gap-0.75"
			if componentSettings.OuterRightOnClickFunc != "" {
				outerRightItemsClasses += " select-none cursor-pointer hover:opacity-80 transition-opacity"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var17 = []any{outerRightItemsClasses}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var17...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var18 string
			templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var17).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.OuterRightOnClickFunc != "" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, " @click=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var19 string
				templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.OuterRightOnClickFunc)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 215, Col: 53}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, ">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.OuterRightIcon != "" {
				var templ_7745c5c3_Var20 = []any{"ph-bold " + componentSettings.OuterRightIcon + " text-lg"}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var20...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "<i class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var21 string
				templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var20).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "\"></i> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.OuterRightLabel != "" {
				var templ_7745c5c3_Var22 string
				templ_7745c5c3_Var22, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.OuterRightLabel)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 222, Col: 40}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.OuterRightLabelOneWayStatePath != "" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "<span x-text=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var23 string
				templ_7745c5c3_Var23, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.OuterRightLabelOneWayStatePath)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/display/tag.templ`, Line: 225, Col: 68}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var23))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
