// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package uiControl

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

const (
	RangeSliderSizeXs string = "xs"
	RangeSliderSizeSm string = "sm"
	RangeSliderSizeMd string = "md"
	RangeSliderSizeLg string = "lg"
	RangeSliderSizeXl string = "xl"

	RangeSliderThumbShapeCircular string = "circular"
	RangeSliderThumbShapeRounded  string = "rounded"
	RangeSliderThumbShapeSquare   string = "square"

	RangeSliderThumbValueBubblePositionTop    string = "top"
	RangeSliderThumbValueBubblePositionBottom string = "bottom"

	RangeSliderThumbValueBubbleSizeXs string = "xs"
	RangeSliderThumbValueBubbleSizeSm string = "sm"
	RangeSliderThumbValueBubbleSizeMd string = "md"
	RangeSliderThumbValueBubbleSizeLg string = "lg"
	RangeSliderThumbValueBubbleSizeXl string = "xl"

	RangeSliderThumbValueBubbleShapeCircular string = "circular"
	RangeSliderThumbValueBubbleShapeRounded  string = "rounded"
	RangeSliderThumbValueBubbleShapeSquare   string = "square"

	RangeSliderThumbValueBubbleRingThicknessXs string = "xs"
	RangeSliderThumbValueBubbleRingThicknessSm string = "sm"
	RangeSliderThumbValueBubbleRingThicknessMd string = "md"
	RangeSliderThumbValueBubbleRingThicknessLg string = "lg"
	RangeSliderThumbValueBubbleRingThicknessXl string = "xl"

	RangeSliderTrackValueLabelPositionTop    string = "top"
	RangeSliderTrackValueLabelPositionBottom string = "bottom"
)

type RangeSliderSettings struct {
	// OptionalFields
	Size                                    string
	ThumbLabel                              string
	ThumbLabelOneWayStatePath               string
	ThumbLabelIcon                          string
	ThumbBackgroundColor                    string
	ThumbTextColor                          string
	ThumbShape                              string
	ThumbValue                              string
	ThumbValueTwoWayStatePath               string
	ThumbValueBubbleEnabled                 bool
	ThumbValueBubbleBackgroundColor         string
	ThumbValueBubbleTextColor               string
	ThumbValueBubbleRingColor               string
	ThumbValueBubbleRingThickness           string
	ThumbValueBubbleSize                    string
	ThumbValueBubbleShape                   string
	ThumbValueBubblePosition                string
	ThumbDualValueModeEnabled               bool
	ThumbUpperValue                         string
	ThumbUpperValueTwoWayStatePath          string
	ThumbUpperBackgroundColor               string
	ThumbUpperTextColor                     string
	ThumbUpperLabel                         string
	ThumbUpperLabelOneWayStatePath          string
	ThumbUpperLabelIcon                     string
	ThumbUpperValueBubbleEnabled            bool
	TrackBackgroundColor                    string
	TrackBackgroundColorFrom                string
	TrackBackgroundColorFromOneWayStatePath string
	TrackBackgroundColorVia                 string
	TrackBackgroundColorViaOneWayStatePath  string
	TrackBackgroundColorTo                  string
	TrackBackgroundColorToOneWayStatePath   string
	TrackSteps                              string
	TrackStartValue                         string
	TrackStartValueOneWayStatePath          string
	TrackStartValueLabelEnabled             bool
	TrackStartValueLabelTextColor           string
	TrackStartValueLabelPosition            string
	TrackStartValueLabelIcon                string
	TrackEndValue                           string
	TrackEndValueOneWayStatePath            string
	TrackEndValueLabelEnabled               bool
	TrackEndValueLabelTextColor             string
	TrackEndValueLabelPosition              string
	TrackEndValueLabelIcon                  string
}

func Thumb(componentSettings RangeSliderSettings, isUpper bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		thumbSize := "w-4.5 h-4.5"
		thumbPosition := "-top-1.25"
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			thumbSize = "w-2.5 h-2.5"
			thumbPosition = "-top-0.75"
		case RangeSliderSizeSm:
			thumbSize = "w-3.5 h-3.5"
			thumbPosition = "-top-1.25"
		case RangeSliderSizeMd:
			thumbSize = "w-4.5 h-4.5"
			thumbPosition = "-top-1.5"
		case RangeSliderSizeLg:
			thumbSize = "w-5.5 h-5.5"
			thumbPosition = "-top-1.75"
		case RangeSliderSizeXl:
			thumbSize = "w-6.5 h-6.5"
			thumbPosition = "-top-2"
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Thumb -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		thumbShape := "rounded-full"
		switch componentSettings.ThumbShape {
		case RangeSliderThumbShapeCircular:
			thumbShape = "rounded-full"
		case RangeSliderThumbShapeRounded:
			thumbShape = "rounded"
		case RangeSliderThumbShapeSquare:
			thumbShape = "rounded-none"
		}
		thumbBackgroundColor := "bg-neutral-50"
		thumbTextColor := "text-neutral-800"
		thumbIcon := componentSettings.ThumbLabelIcon
		thumbLabel := componentSettings.ThumbLabel
		thumbLabelPath := componentSettings.ThumbLabelOneWayStatePath
		thumbValueBubbleEnabled := componentSettings.ThumbValueBubbleEnabled
		if isUpper {
			if componentSettings.ThumbUpperBackgroundColor != "" {
				thumbBackgroundColor = "bg-" + componentSettings.ThumbUpperBackgroundColor
			} else if componentSettings.ThumbBackgroundColor != "" {
				thumbBackgroundColor = "bg-" + componentSettings.ThumbBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperTextColor != "" {
				thumbTextColor = "text-" + componentSettings.ThumbUpperTextColor
			} else if componentSettings.ThumbTextColor != "" {
				thumbTextColor = "text-" + componentSettings.ThumbTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperLabelIcon != "" {
				thumbIcon = componentSettings.ThumbUpperLabelIcon
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperLabel != "" {
				thumbLabel = componentSettings.ThumbUpperLabel
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperLabelOneWayStatePath != "" {
				thumbLabelPath = componentSettings.ThumbUpperLabelOneWayStatePath
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperValueBubbleEnabled {
				thumbValueBubbleEnabled = true
			}
		} else {
			if componentSettings.ThumbBackgroundColor != "" {
				thumbBackgroundColor = "bg-" + componentSettings.ThumbBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbTextColor != "" {
				thumbTextColor = "text-" + componentSettings.ThumbTextColor
			}
		}
		thumbLeftNegativeOffset := ".5rem"
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			thumbLeftNegativeOffset = ".25rem"
		case RangeSliderSizeSm:
			thumbLeftNegativeOffset = ".375rem"
		case RangeSliderSizeMd:
			thumbLeftNegativeOffset = ".5rem"
		case RangeSliderSizeLg:
			thumbLeftNegativeOffset = ".625rem"
		case RangeSliderSizeXl:
			thumbLeftNegativeOffset = ".75rem"
		}
		zIndex := ""
		percentValue := "sliderValuePercent"
		bubbleValue := "sliderValue"
		if isUpper {
			zIndex = "z-10"
			percentValue = "upperValuePercent"
			bubbleValue = "sliderUpperValue"
		}
		var templ_7745c5c3_Var2 = []any{"absolute flex justify-center items-center " + thumbPosition + " " + thumbSize + " " + thumbShape + " " + thumbBackgroundColor + " " + thumbTextColor + " cursor-pointer shadow-md transition-transform " + zIndex}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" x-bind:style=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs("'left: calc(' + " + percentValue + " + '% - " + thumbLeftNegativeOffset + ")'")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 177, Col: 96}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if thumbIcon != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<!-- ThumbLabelIcon --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			thumbIconSize := "text-sm"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				thumbIconSize = "text-[0.5rem]"
			case RangeSliderSizeSm:
				thumbIconSize = "text-xs"
			case RangeSliderSizeMd:
				thumbIconSize = "text-sm"
			case RangeSliderSizeLg:
				thumbIconSize = "text-md"
			case RangeSliderSizeXl:
				thumbIconSize = "text-lg"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 = []any{"ph-bold " + thumbIcon + " flex h-full w-full items-center justify-center " + thumbIconSize}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var5...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<i class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var5).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "\"></i> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if thumbLabel != "" || thumbLabelPath != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<!-- ThumbLabel --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			thumbLabelSize := "text-xs"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				thumbLabelSize = "text-[0.5rem]"
			case RangeSliderSizeSm:
				thumbLabelSize = "text-xs"
			case RangeSliderSizeMd:
				thumbLabelSize = "text-sm"
			case RangeSliderSizeLg:
				thumbLabelSize = "text-md"
			case RangeSliderSizeXl:
				thumbLabelSize = "text-lg"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 = []any{"flex h-full w-full items-center justify-center " + thumbLabelSize}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var7...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<span class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var7).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if thumbLabelPath != "" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, " x-text=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var9 string
				templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(thumbLabelPath)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 214, Col: 28}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, ">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(thumbLabel)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 217, Col: 16}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<!-- ThumbValueBubble -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if thumbValueBubbleEnabled {
			bubblePositionOffset := "7.5"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				bubblePositionOffset = "5.5"
			case RangeSliderSizeSm:
				bubblePositionOffset = "6.5"
			case RangeSliderSizeMd:
				bubblePositionOffset = "7.5"
			case RangeSliderSizeLg:
				bubblePositionOffset = "8.5"
			case RangeSliderSizeXl:
				bubblePositionOffset = "9.5"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			switch componentSettings.ThumbValueBubbleSize {
			case RangeSliderThumbValueBubbleSizeXs:
				bubblePositionOffset = "5.5"
			case RangeSliderThumbValueBubbleSizeSm:
				bubblePositionOffset = "6.5"
			case RangeSliderThumbValueBubbleSizeMd:
				bubblePositionOffset = "7.5"
			case RangeSliderThumbValueBubbleSizeLg:
				bubblePositionOffset = "8.5"
			case RangeSliderThumbValueBubbleSizeXl:
				bubblePositionOffset = "9.5"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubblePosition := "-top-" + bubblePositionOffset
			if componentSettings.ThumbValueBubblePosition == RangeSliderThumbValueBubblePositionBottom {
				bubblePosition = "-bottom-" + bubblePositionOffset
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleSize := "min-w-8 p-1 text-base"
			switch componentSettings.ThumbValueBubbleSize {
			case RangeSliderThumbValueBubbleSizeXs:
				bubbleSize = "min-w-6 p-0.5 text-xs"
			case RangeSliderThumbValueBubbleSizeSm:
				bubbleSize = "min-w-7 p-0.75 text-sm"
			case RangeSliderThumbValueBubbleSizeMd:
				bubbleSize = "min-w-8 p-1 text-base"
			case RangeSliderThumbValueBubbleSizeLg:
				bubbleSize = "min-w-10 p-1.5 text-lg"
			case RangeSliderThumbValueBubbleSizeXl:
				bubbleSize = "min-w-12 p-2 text-xl"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleShape := "rounded-full"
			switch componentSettings.ThumbValueBubbleShape {
			case RangeSliderThumbValueBubbleShapeCircular:
				bubbleShape = "rounded-full"
			case RangeSliderThumbValueBubbleShapeRounded:
				bubbleShape = "rounded"
			case RangeSliderThumbValueBubbleShapeSquare:
				bubbleShape = "rounded-none"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleBackgroundColor := "bg-neutral-800"
			if componentSettings.ThumbValueBubbleBackgroundColor != "" {
				bubbleBackgroundColor = "bg-" + componentSettings.ThumbValueBubbleBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleTextColor := "text-neutral-50"
			if componentSettings.ThumbValueBubbleTextColor != "" {
				bubbleTextColor = "text-" + componentSettings.ThumbValueBubbleTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleRingClasses := ""
			if componentSettings.ThumbValueBubbleRingColor != "" {
				bubbleRingThickness := "ring-1"
				switch componentSettings.ThumbValueBubbleRingThickness {
				case RangeSliderThumbValueBubbleRingThicknessXs:
					bubbleRingThickness = "ring-0.5"
				case RangeSliderThumbValueBubbleRingThicknessSm:
					bubbleRingThickness = "ring-1"
				case RangeSliderThumbValueBubbleRingThicknessMd:
					bubbleRingThickness = "ring-1.5"
				case RangeSliderThumbValueBubbleRingThicknessLg:
					bubbleRingThickness = "ring-2"
				case RangeSliderThumbValueBubbleRingThicknessXl:
					bubbleRingThickness = "ring-2.5"
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				bubbleRingClasses = bubbleRingThickness + " ring-" + componentSettings.ThumbValueBubbleRingColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 = []any{"absolute " + bubblePosition + " select-none flex items-center justify-center " + bubbleSize + " " + bubbleShape + " " + bubbleBackgroundColor + " " + bubbleTextColor + " " + bubbleRingClasses}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var11...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var11).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "\" x-text=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(bubbleValue)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 300, Col: 24}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func RangeSlider(componentSettings RangeSliderSettings) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var14 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var14 == nil {
			templ_7745c5c3_Var14 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, "<!-- RangeSlider -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		thumbValue := "0"
		thumbUpperValue := "75"
		trackStartValue := "0"
		trackEndValue := "100"
		trackSteps := "1"
		if componentSettings.ThumbValue != "" {
			thumbValue = componentSettings.ThumbValue
		}
		if componentSettings.ThumbValueTwoWayStatePath != "" {
			thumbValue = componentSettings.ThumbValueTwoWayStatePath
		}
		if componentSettings.ThumbUpperValue != "" {
			thumbUpperValue = componentSettings.ThumbUpperValue
		}
		if componentSettings.ThumbUpperValueTwoWayStatePath != "" {
			thumbUpperValue = componentSettings.ThumbUpperValueTwoWayStatePath
		}
		if componentSettings.TrackStartValue != "" {
			trackStartValue = componentSettings.TrackStartValue
		}
		if componentSettings.TrackStartValueOneWayStatePath != "" {
			trackStartValue = componentSettings.TrackStartValueOneWayStatePath
		}
		if componentSettings.TrackEndValue != "" {
			trackEndValue = componentSettings.TrackEndValue
		}
		if componentSettings.TrackEndValueOneWayStatePath != "" {
			trackEndValue = componentSettings.TrackEndValueOneWayStatePath
		}
		if componentSettings.TrackSteps != "" {
			trackSteps = componentSettings.TrackSteps
		}
		alpineData := "{sliderValue: " + thumbValue + ", startValue: " + trackStartValue + ", endValue: " + trackEndValue + ", steps: " + trackSteps + ", get sliderValuePercent() { return ((this.sliderValue - this.startValue) / (this.endValue - this.startValue)) * 100; }}"
		if componentSettings.ThumbDualValueModeEnabled {
			alpineData = "{sliderValue: " + thumbValue + ", sliderUpperValue: " + thumbUpperValue + ", startValue: " + trackStartValue + ", endValue: " + trackEndValue + ", steps: " + trackSteps + ", get sliderValuePercent() { return ((this.sliderValue - this.startValue) / (this.endValue - this.startValue)) * 100; }, get upperValuePercent() { return ((this.sliderUpperValue - this.startValue) / (this.endValue - this.startValue)) * 100; }}"
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, "<div class=\"flex w-full flex-col\" x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var15 string
		templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(alpineData)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 346, Col: 21}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, "\"><div class=\"relative flex w-full flex-row items-center gap-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		trackHeight := "h-1.5"
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			trackHeight = "h-1"
		case RangeSliderSizeSm:
			trackHeight = "h-1.25"
		case RangeSliderSizeMd:
			trackHeight = "h-1.5"
		case RangeSliderSizeLg:
			trackHeight = "h-1.75"
		case RangeSliderSizeXl:
			trackHeight = "h-2"
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, "<!-- TrackStartValue -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.TrackStartValueLabelEnabled || componentSettings.TrackStartValueLabelIcon != "" {
			startLabelPosition := ""
			switch componentSettings.TrackStartValueLabelPosition {
			case RangeSliderTrackValueLabelPositionTop:
				startLabelPosition = "absolute left-0 bottom-full mb-1"
			case RangeSliderTrackValueLabelPositionBottom:
				startLabelPosition = "absolute left-0 top-full mt-1"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			startLabelTextColor := "text-neutral-400"
			if componentSettings.TrackStartValueLabelTextColor != "" {
				startLabelTextColor = "text-" + componentSettings.TrackStartValueLabelTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 = []any{startLabelPosition + " flex items-center text-xs gap-1 " + startLabelTextColor}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var16...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var17 string
			templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var16).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			startLabelIconSize := "text-lg"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				startLabelIconSize = "text-sm"
			case RangeSliderSizeSm:
				startLabelIconSize = "text-md"
			case RangeSliderSizeMd:
				startLabelIconSize = "text-lg"
			case RangeSliderSizeLg:
				startLabelIconSize = "text-xl"
			case RangeSliderSizeXl:
				startLabelIconSize = "text-2xl"
			}
			if componentSettings.TrackStartValueLabelIcon != "" {
				var templ_7745c5c3_Var18 = []any{"ph-bold " + componentSettings.TrackStartValueLabelIcon + " " + startLabelIconSize}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var18...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, "<i class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var19 string
				templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var18).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "\"></i> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.TrackStartValueLabelEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, "<span x-text=\"startValue\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 48, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 49, "<!-- Track&Thumb --><div class=\"relative flex w-full flex-row gap-2\"><!-- TrackBackground -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		trackBackgroundColor := "bg-neutral-50/5"
		if componentSettings.TrackBackgroundColor != "" {
			trackBackgroundColor = "bg-" + componentSettings.TrackBackgroundColor
		}
		if componentSettings.TrackBackgroundColorFrom != "" || componentSettings.TrackBackgroundColorVia != "" || componentSettings.TrackBackgroundColorTo != "" {
			trackBackgroundColor = "bg-gradient-to-r"
			if componentSettings.TrackBackgroundColorFrom != "" {
				trackBackgroundColor = trackBackgroundColor + " from-" + componentSettings.TrackBackgroundColorFrom
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 50, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackBackgroundColorVia != "" {
				trackBackgroundColor = trackBackgroundColor + " via-" + componentSettings.TrackBackgroundColorVia
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 51, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackBackgroundColorTo != "" {
				trackBackgroundColor = trackBackgroundColor + " to-" + componentSettings.TrackBackgroundColorTo
			}
		}
		var templ_7745c5c3_Var20 = []any{trackBackgroundColor + " rounded-full w-full " + trackHeight}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var20...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 52, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var21 string
		templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var20).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 53, "\"><!-- TrackFill -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		trackFillClass := "h-full rounded-full bg-neutral-50/30"
		trackFillStyle := "'width: ' + sliderValuePercent + '%'"
		if componentSettings.ThumbDualValueModeEnabled {
			trackFillClass = "absolute h-full rounded-full bg-neutral-50/30"
			trackFillStyle = "'left: ' + sliderValuePercent + '%; right: ' + (100 - upperValuePercent) + '%'"
		}
		var templ_7745c5c3_Var22 = []any{trackFillClass}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var22...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 54, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var23 string
		templ_7745c5c3_Var23, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var22).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var23))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 55, "\" x-bind:style=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var24 string
		templ_7745c5c3_Var24, templ_7745c5c3_Err = templ.JoinStringErrs(trackFillStyle)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 426, Col: 35}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var24))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 56, "\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Thumb(componentSettings, false).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbDualValueModeEnabled {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 57, "<!-- ThumbUpper --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Thumb(componentSettings, true).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 58, "<!-- RangeInputs --><div class=\"absolute inset-0 h-full w-full\"><input type=\"range\" class=\"absolute inset-y-0 left-0 z-20 w-1/2 cursor-pointer opacity-0\" :min=\"startValue\" :max=\"endValue\" :step=\"steps\" x-model:value=\"sliderValue\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbDualValueModeEnabled {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 59, " x-on:input=\"if (sliderValue &gt;= sliderUpperValue) sliderValue = sliderUpperValue - steps\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 60, "> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbDualValueModeEnabled {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 61, "<!-- RangeInputUpper --> <input type=\"range\" class=\"absolute inset-y-0 right-0 z-20 w-1/2 cursor-pointer opacity-0\" :min=\"startValue\" :max=\"endValue\" :step=\"steps\" x-model:value=\"sliderUpperValue\" x-on:input=\"if (sliderUpperValue &lt;= sliderValue) sliderUpperValue = sliderValue + steps\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 62, "</div></div><!-- TrackEndValue -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.TrackEndValueLabelEnabled || componentSettings.TrackEndValueLabelIcon != "" {
			endLabelPosition := ""
			switch componentSettings.TrackEndValueLabelPosition {
			case RangeSliderTrackValueLabelPositionTop:
				endLabelPosition = "absolute right-0 bottom-full mb-1"
			case RangeSliderTrackValueLabelPositionBottom:
				endLabelPosition = "absolute right-0 top-full mt-1"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 63, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			endLabelTextColor := "text-neutral-400"
			if componentSettings.TrackEndValueLabelTextColor != "" {
				endLabelTextColor = "text-" + componentSettings.TrackEndValueLabelTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 64, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			endLabelIconSize := "text-lg"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				endLabelIconSize = "text-sm"
			case RangeSliderSizeSm:
				endLabelIconSize = "text-md"
			case RangeSliderSizeMd:
				endLabelIconSize = "text-lg"
			case RangeSliderSizeLg:
				endLabelIconSize = "text-xl"
			case RangeSliderSizeXl:
				endLabelIconSize = "text-2xl"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 65, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var25 = []any{endLabelPosition + " flex items-center text-xs gap-1 " + endLabelTextColor}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var25...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 66, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var26 string
			templ_7745c5c3_Var26, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var25).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var26))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 67, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackEndValueLabelIcon != "" {
				var templ_7745c5c3_Var27 = []any{"ph-bold " + componentSettings.TrackEndValueLabelIcon + " " + endLabelIconSize}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var27...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 68, "<i class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var28 string
				templ_7745c5c3_Var28, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var27).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var28))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 69, "\"></i> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.TrackEndValueLabelEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 70, "<span x-text=\"endValue\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 71, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 72, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
