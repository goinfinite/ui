// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.887
package uiControl

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "strconv"

const (
	RangeSliderSizeXs string = "xs"
	RangeSliderSizeSm string = "sm"
	RangeSliderSizeMd string = "md"
	RangeSliderSizeLg string = "lg"
	RangeSliderSizeXl string = "xl"

	RangeSliderThumbShapeCircular string = "circular"
	RangeSliderThumbShapeRounded  string = "rounded"
	RangeSliderThumbShapeSquare   string = "square"
	RangeSliderThumbShapePipe     string = "pipe"

	RangeSliderThumbValueBubblePositionTop    string = "top"
	RangeSliderThumbValueBubblePositionBottom string = "bottom"

	RangeSliderThumbValueBubbleSizeXs string = "xs"
	RangeSliderThumbValueBubbleSizeSm string = "sm"
	RangeSliderThumbValueBubbleSizeMd string = "md"
	RangeSliderThumbValueBubbleSizeLg string = "lg"
	RangeSliderThumbValueBubbleSizeXl string = "xl"

	RangeSliderThumbValueBubbleShapeCircular string = "circular"
	RangeSliderThumbValueBubbleShapeRounded  string = "rounded"
	RangeSliderThumbValueBubbleShapeSquare   string = "square"

	RangeSliderThumbValueBubbleRingThicknessXs string = "xs"
	RangeSliderThumbValueBubbleRingThicknessSm string = "sm"
	RangeSliderThumbValueBubbleRingThicknessMd string = "md"
	RangeSliderThumbValueBubbleRingThicknessLg string = "lg"
	RangeSliderThumbValueBubbleRingThicknessXl string = "xl"

	RangeSliderTrackValueLabelPositionTop    string = "top"
	RangeSliderTrackValueLabelPositionBottom string = "bottom"
)

type RangeSliderSettings struct {
	// OptionalFields
	Size                                 string
	ThumbLabel                           string
	ThumbLabelOneWayStatePath            string
	ThumbLabelIcon                       string
	ThumbBackgroundColor                 string
	ThumbTextColor                       string
	ThumbShape                           string
	ThumbValue                           string
	ThumbValueTwoWayStatePath            string
	ThumbValueBubbleEnabled              bool
	ThumbValueBubbleBackgroundColor      string
	ThumbValueBubbleTextColor            string
	ThumbValueBubbleRingColor            string
	ThumbValueBubbleRingThickness        string
	ThumbValueBubbleSize                 string
	ThumbValueBubbleShape                string
	ThumbValueBubblePosition             string
	ThumbDualValueModeEnabled            bool
	ThumbUpperValue                      string
	ThumbUpperValueTwoWayStatePath       string
	ThumbUpperBackgroundColor            string
	ThumbUpperTextColor                  string
	ThumbUpperLabel                      string
	ThumbUpperLabelOneWayStatePath       string
	ThumbUpperLabelIcon                  string
	ThumbUpperValueBubbleEnabled         bool
	ThumbUpperValueBubbleBackgroundColor string
	ThumbUpperValueBubbleTextColor       string
	ThumbUpperValueBubbleRingColor       string
	ThumbUpperValueBubbleRingThickness   string
	ThumbUpperValueBubbleSize            string
	ThumbUpperValueBubbleShape           string
	ThumbUpperValueBubblePosition        string
	TrackBackgroundColor                 string
	TrackBackgroundColorFrom             string
	TrackBackgroundColorVia              string
	TrackBackgroundColorTo               string
	TrackSteps                           string
	TrackFillColor                       string
	TrackFillColorFrom                   string
	TrackFillColorVia                    string
	TrackFillColorTo                     string
	TrackStartValue                      string
	TrackStartValueOneWayStatePath       string
	TrackStartValueLabelEnabled          bool
	TrackStartValueLabelTextColor        string
	TrackStartValueLabelPosition         string
	TrackStartValueLabelIcon             string
	TrackEndValue                        string
	TrackEndValueOneWayStatePath         string
	TrackEndValueLabelEnabled            bool
	TrackEndValueLabelTextColor          string
	TrackEndValueLabelPosition           string
	TrackEndValueLabelIcon               string
}

func Thumb(componentSettings RangeSliderSettings, isUpper bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		thumbSize := "w-4.5 h-4.5"
		thumbPosition := "-top-1.25"
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			thumbSize = "w-2.5 h-2.5"
			thumbPosition = "-top-0.75"
		case RangeSliderSizeSm:
			thumbSize = "w-3.5 h-3.5"
			thumbPosition = "-top-1.25"
		case RangeSliderSizeMd:
			thumbSize = "w-4.5 h-4.5"
			thumbPosition = "-top-1.5"
		case RangeSliderSizeLg:
			thumbSize = "w-5.5 h-5.5"
			thumbPosition = "-top-1.75"
		case RangeSliderSizeXl:
			thumbSize = "w-6.5 h-6.5"
			thumbPosition = "-top-2"
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Thumb -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		thumbShape := "rounded-full"
		switch componentSettings.ThumbShape {
		case RangeSliderThumbShapeCircular:
			thumbShape = "rounded-full"
		case RangeSliderThumbShapeRounded:
			thumbShape = "rounded"
		case RangeSliderThumbShapeSquare:
			thumbShape = "rounded-none"
		case RangeSliderThumbShapePipe:
			thumbShape = "rounded-none"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				thumbShape += " !w-1"
			case RangeSliderSizeSm:
				thumbShape += " !w-1"
			case RangeSliderSizeMd:
				thumbShape += " !w-1"
			case RangeSliderSizeLg:
				thumbShape += " !w-1.5"
			case RangeSliderSizeXl:
				thumbShape += " !w-1.5"
			default:
				thumbShape += " !w-1"
			}
		}
		thumbBackgroundColor := "bg-neutral-50"
		thumbTextColor := "text-neutral-800"
		thumbIcon := componentSettings.ThumbLabelIcon
		thumbLabel := componentSettings.ThumbLabel
		thumbLabelPath := componentSettings.ThumbLabelOneWayStatePath
		thumbValueBubbleEnabled := componentSettings.ThumbValueBubbleEnabled
		if isUpper {
			if componentSettings.ThumbUpperBackgroundColor != "" {
				thumbBackgroundColor = "bg-" + componentSettings.ThumbUpperBackgroundColor
			} else if componentSettings.ThumbBackgroundColor != "" {
				thumbBackgroundColor = "bg-" + componentSettings.ThumbBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperTextColor != "" {
				thumbTextColor = "text-" + componentSettings.ThumbUpperTextColor
			} else if componentSettings.ThumbTextColor != "" {
				thumbTextColor = "text-" + componentSettings.ThumbTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperLabelIcon != "" {
				thumbIcon = componentSettings.ThumbUpperLabelIcon
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperLabel != "" {
				thumbLabel = componentSettings.ThumbUpperLabel
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperLabelOneWayStatePath != "" {
				thumbLabelPath = componentSettings.ThumbUpperLabelOneWayStatePath
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			thumbValueBubbleEnabled = componentSettings.ThumbUpperValueBubbleEnabled
		} else {
			if componentSettings.ThumbBackgroundColor != "" {
				thumbBackgroundColor = "bg-" + componentSettings.ThumbBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbTextColor != "" {
				thumbTextColor = "text-" + componentSettings.ThumbTextColor
			}
		}
		percentValue := "thumbValuePercent"
		bubbleValue := "thumbValue"
		if isUpper {
			percentValue = "thumbUpperValuePercent"
			bubbleValue = "thumbUpperValue"
		}
		hoverState := "thumbHover"
		if isUpper {
			hoverState = "thumbUpperHover"
		}
		var templ_7745c5c3_Var2 = []any{"absolute select-none flex justify-center items-center " + thumbPosition + " " + thumbSize + " " + thumbShape + " " + thumbBackgroundColor + " " + thumbTextColor + " cursor-pointer shadow-md transition-transform duration-200 z-10"}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" :style=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs("'left: calc(' + " + percentValue + " + '%); transform: translateX(-50%) scale(' + (" + hoverState + " ? 1.1 : 1) + ');'")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 191, Col: 132}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" :class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs("!" + hoverState + " && 'z-30'")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 192, Col: 42}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" @mouseenter=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(hoverState + " = true")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 193, Col: 38}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "\" @mouseleave=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(hoverState + " = false")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 194, Col: 39}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if thumbIcon != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "<!-- ThumbLabelIcon --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			thumbIconSize := "text-sm"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				thumbIconSize = "text-[0.5rem]"
			case RangeSliderSizeSm:
				thumbIconSize = "text-xs"
			case RangeSliderSizeMd:
				thumbIconSize = "text-sm"
			case RangeSliderSizeLg:
				thumbIconSize = "text-base"
			case RangeSliderSizeXl:
				thumbIconSize = "text-lg"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 = []any{"ph-bold " + thumbIcon + " flex h-full w-full items-center justify-center " + thumbIconSize}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var8...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<i class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var8).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "\"></i> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if thumbLabel != "" || thumbLabelPath != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<!-- ThumbLabel --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			thumbLabelSize := "text-xs"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				thumbLabelSize = "text-[0.5rem]"
			case RangeSliderSizeSm:
				thumbLabelSize = "text-xs"
			case RangeSliderSizeMd:
				thumbLabelSize = "text-sm"
			case RangeSliderSizeLg:
				thumbLabelSize = "text-base"
			case RangeSliderSizeXl:
				thumbLabelSize = "text-lg"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 = []any{"flex h-full w-full items-center justify-center " + thumbLabelSize}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var10...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "<span class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var10).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if thumbLabelPath != "" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, " x-text=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var12 string
				templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(thumbLabelPath)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 231, Col: 28}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, ">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(thumbLabel)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 234, Col: 16}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "<!-- ThumbValueBubble -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if thumbValueBubbleEnabled {
			bubblePositionOffset := "7.5"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				bubblePositionOffset = "5.5"
			case RangeSliderSizeSm:
				bubblePositionOffset = "6.5"
			case RangeSliderSizeMd:
				bubblePositionOffset = "7.5"
			case RangeSliderSizeLg:
				bubblePositionOffset = "8.5"
			case RangeSliderSizeXl:
				bubblePositionOffset = "9.5"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			customBubbleSize := componentSettings.ThumbValueBubbleSize
			if isUpper && componentSettings.ThumbUpperValueBubbleSize != "" {
				customBubbleSize = componentSettings.ThumbUpperValueBubbleSize
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			switch customBubbleSize {
			case RangeSliderThumbValueBubbleSizeXs:
				bubblePositionOffset = "5.5"
			case RangeSliderThumbValueBubbleSizeSm:
				bubblePositionOffset = "6.5"
			case RangeSliderThumbValueBubbleSizeMd:
				bubblePositionOffset = "7.5"
			case RangeSliderThumbValueBubbleSizeLg:
				bubblePositionOffset = "8.5"
			case RangeSliderThumbValueBubbleSizeXl:
				bubblePositionOffset = "9.5"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubblePosition := "-top-" + bubblePositionOffset
			if componentSettings.ThumbValueBubblePosition == RangeSliderThumbValueBubblePositionBottom {
				bubblePosition = "-bottom-" + bubblePositionOffset
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if isUpper && componentSettings.ThumbUpperValueBubblePosition != "" {
				bubblePosition = "-top-" + bubblePositionOffset
				if componentSettings.ThumbUpperValueBubblePosition == RangeSliderThumbValueBubblePositionBottom {
					bubblePosition = "-bottom-" + bubblePositionOffset
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleSize := "min-w-8 p-1 text-base"
			if isUpper && componentSettings.ThumbUpperValueBubbleSize != "" {
				customBubbleSize = componentSettings.ThumbUpperValueBubbleSize
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			switch customBubbleSize {
			case RangeSliderThumbValueBubbleSizeXs:
				bubbleSize = "min-w-6 p-0.5 text-xs"
			case RangeSliderThumbValueBubbleSizeSm:
				bubbleSize = "min-w-7 p-0.75 text-sm"
			case RangeSliderThumbValueBubbleSizeMd:
				bubbleSize = "min-w-8 p-1 text-base"
			case RangeSliderThumbValueBubbleSizeLg:
				bubbleSize = "min-w-10 p-1.5 text-lg"
			case RangeSliderThumbValueBubbleSizeXl:
				bubbleSize = "min-w-12 p-2 text-xl"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleShape := "rounded-full"
			customBubbleShape := componentSettings.ThumbValueBubbleShape
			if isUpper && componentSettings.ThumbUpperValueBubbleShape != "" {
				customBubbleShape = componentSettings.ThumbUpperValueBubbleShape
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			switch customBubbleShape {
			case RangeSliderThumbValueBubbleShapeCircular:
				bubbleShape = "rounded-full"
			case RangeSliderThumbValueBubbleShapeRounded:
				bubbleShape = "rounded"
			case RangeSliderThumbValueBubbleShapeSquare:
				bubbleShape = "rounded-none"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleBackgroundColor := "bg-neutral-800"
			if componentSettings.ThumbValueBubbleBackgroundColor != "" {
				bubbleBackgroundColor = "bg-" + componentSettings.ThumbValueBubbleBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if isUpper && componentSettings.ThumbUpperValueBubbleBackgroundColor != "" {
				bubbleBackgroundColor = "bg-" + componentSettings.ThumbUpperValueBubbleBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleTextColor := "text-neutral-50"
			if componentSettings.ThumbValueBubbleTextColor != "" {
				bubbleTextColor = "text-" + componentSettings.ThumbValueBubbleTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if isUpper && componentSettings.ThumbUpperValueBubbleTextColor != "" {
				bubbleTextColor = "text-" + componentSettings.ThumbUpperValueBubbleTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleRingClasses := ""
			if componentSettings.ThumbValueBubbleRingColor != "" {
				bubbleRingClasses = "ring-" + componentSettings.ThumbValueBubbleRingColor
				if isUpper && componentSettings.ThumbUpperValueBubbleRingColor != "" {
					bubbleRingClasses = "ring-" + componentSettings.ThumbUpperValueBubbleRingColor
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				bubbleRingThickness := "ring-1"
				customBubbleRingThickness := componentSettings.ThumbValueBubbleRingThickness
				if isUpper && componentSettings.ThumbUpperValueBubbleRingThickness != "" {
					customBubbleRingThickness = componentSettings.ThumbUpperValueBubbleRingThickness
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				switch customBubbleRingThickness {
				case RangeSliderThumbValueBubbleRingThicknessXs:
					bubbleRingThickness = "ring-0.5"
				case RangeSliderThumbValueBubbleRingThicknessSm:
					bubbleRingThickness = "ring-1"
				case RangeSliderThumbValueBubbleRingThicknessMd:
					bubbleRingThickness = "ring-1.5"
				case RangeSliderThumbValueBubbleRingThicknessLg:
					bubbleRingThickness = "ring-2"
				case RangeSliderThumbValueBubbleRingThicknessXl:
					bubbleRingThickness = "ring-2.5"
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				bubbleRingClasses += " " + bubbleRingThickness
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 = []any{"absolute " + bubblePosition + " select-none flex items-center justify-center " + bubbleSize + " " + bubbleShape + " " + bubbleBackgroundColor + " " + bubbleTextColor + " " + bubbleRingClasses}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var14...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var14).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, "\" x-text=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 string
			templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(bubbleValue)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 348, Col: 24}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "\" @mouseenter=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var17 string
			templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(hoverState + " = true")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 349, Col: 40}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, "\" @mouseleave=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var18 string
			templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(hoverState + " = false")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 350, Col: 41}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 48, "\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 49, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func RangeSlider(componentSettings RangeSliderSettings) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var19 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var19 == nil {
			templ_7745c5c3_Var19 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 50, "<!-- RangeSlider -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		thumbValue := "0"
		thumbUpperValue := "75"
		trackStartValue := "0"
		trackEndValue := "100"
		trackSteps := "1"
		if componentSettings.ThumbValue != "" {
			thumbValue = componentSettings.ThumbValue
		}
		if componentSettings.ThumbValueTwoWayStatePath != "" {
			thumbValue = componentSettings.ThumbValueTwoWayStatePath
		}
		if componentSettings.ThumbUpperValue != "" {
			thumbUpperValue = componentSettings.ThumbUpperValue
		}
		if componentSettings.ThumbUpperValueTwoWayStatePath != "" {
			thumbUpperValue = componentSettings.ThumbUpperValueTwoWayStatePath
		}
		if componentSettings.TrackStartValue != "" {
			trackStartValue = componentSettings.TrackStartValue
		}
		if componentSettings.TrackStartValueOneWayStatePath != "" {
			trackStartValue = componentSettings.TrackStartValueOneWayStatePath
		}
		if componentSettings.TrackEndValue != "" {
			trackEndValue = componentSettings.TrackEndValue
		}
		if componentSettings.TrackEndValueOneWayStatePath != "" {
			trackEndValue = componentSettings.TrackEndValueOneWayStatePath
		}
		if componentSettings.TrackSteps != "" {
			trackSteps = componentSettings.TrackSteps
		}
		alpineData := "{thumbValue: " + thumbValue + ", trackStartValue: " + trackStartValue + ", trackEndValue: " + trackEndValue + ", trackSteps: " + trackSteps + ", thumbHover: false, clampPercent(percent) { return Math.min(Math.max(percent, 0), 100); }, get thumbValuePercent() { return this.clampPercent((this.thumbValue - this.trackStartValue) / (this.trackEndValue - this.trackStartValue) * 100); }"
		if componentSettings.ThumbDualValueModeEnabled {
			alpineData += ", thumbUpperValue: " + thumbUpperValue + ", thumbUpperHover: false, get thumbUpperValuePercent() { return this.clampPercent((this.thumbUpperValue - this.trackStartValue) / (this.trackEndValue - this.trackStartValue) * 100); }"
		}
		alpineData += "}"
		alpineWatch := ""
		if componentSettings.ThumbValueTwoWayStatePath != "" {
			alpineWatch = "$watch('" + componentSettings.ThumbValueTwoWayStatePath + "', (newValue, oldValue) => { if (oldValue == newValue) return; if (newValue < trackStartValue) newValue = trackStartValue; if (newValue > trackEndValue) newValue = trackEndValue; if (thumbValue != newValue) thumbValue = newValue; });"
		}
		if componentSettings.ThumbUpperValueTwoWayStatePath != "" {
			alpineWatch += "$watch('" + componentSettings.ThumbUpperValueTwoWayStatePath + "', (newValue, oldValue) => { if (oldValue == newValue) return; if (newValue < trackStartValue) newValue = trackStartValue; if (newValue > trackEndValue) newValue = trackEndValue; if (thumbUpperValue != newValue) thumbUpperValue = newValue; });"
		}
		mainDivMinHeight := 6
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			mainDivMinHeight = 4
		case RangeSliderSizeSm:
			mainDivMinHeight = 5
		case RangeSliderSizeMd:
			mainDivMinHeight = 6
		case RangeSliderSizeLg:
			mainDivMinHeight = 7
		case RangeSliderSizeXl:
			mainDivMinHeight = 8
		}
		if componentSettings.ThumbValueBubbleEnabled {
			mainDivMinHeight = mainDivMinHeight * 3
		}
		var templ_7745c5c3_Var20 = []any{"flex w-full flex-col items-center justify-center" + " min-h-" + strconv.Itoa(mainDivMinHeight)}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var20...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 51, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var21 string
		templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var20).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 52, "\" x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var22 string
		templ_7745c5c3_Var22, templ_7745c5c3_Err = templ.JoinStringErrs(alpineData)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 420, Col: 21}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 53, "\" x-init=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var23 string
		templ_7745c5c3_Var23, templ_7745c5c3_Err = templ.JoinStringErrs(alpineWatch)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 421, Col: 22}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var23))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 54, "\"><div class=\"relative flex w-full flex-row items-center gap-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		trackHeight := "h-1.5"
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			trackHeight = "h-1"
		case RangeSliderSizeSm:
			trackHeight = "h-1.25"
		case RangeSliderSizeMd:
			trackHeight = "h-1.5"
		case RangeSliderSizeLg:
			trackHeight = "h-1.75"
		case RangeSliderSizeXl:
			trackHeight = "h-2"
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 55, "<!-- TrackStartValue -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.TrackStartValueLabelEnabled || componentSettings.TrackStartValueLabelIcon != "" {
			startLabelPosition := ""
			switch componentSettings.TrackStartValueLabelPosition {
			case RangeSliderTrackValueLabelPositionTop:
				startLabelPosition = "absolute left-0 bottom-full mb-1"
			case RangeSliderTrackValueLabelPositionBottom:
				startLabelPosition = "absolute left-0 top-full mt-1"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 56, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			startLabelTextColor := "text-neutral-400"
			if componentSettings.TrackStartValueLabelTextColor != "" {
				startLabelTextColor = "text-" + componentSettings.TrackStartValueLabelTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 57, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var24 = []any{startLabelPosition + " flex items-center text-xs gap-1 " + startLabelTextColor}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var24...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 58, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var25 string
			templ_7745c5c3_Var25, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var24).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var25))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 59, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			startLabelIconSize := "text-lg"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				startLabelIconSize = "text-sm"
			case RangeSliderSizeSm:
				startLabelIconSize = "text-base"
			case RangeSliderSizeMd:
				startLabelIconSize = "text-lg"
			case RangeSliderSizeLg:
				startLabelIconSize = "text-xl"
			case RangeSliderSizeXl:
				startLabelIconSize = "text-2xl"
			}
			if componentSettings.TrackStartValueLabelIcon != "" {
				var templ_7745c5c3_Var26 = []any{"ph-bold " + componentSettings.TrackStartValueLabelIcon + " " + startLabelIconSize}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var26...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 60, "<i class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var27 string
				templ_7745c5c3_Var27, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var26).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var27))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 61, "\"></i> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.TrackStartValueLabelEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 62, "<span x-text=\"trackStartValue\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 63, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 64, "<!-- Track&Thumb --><div class=\"relative flex w-full flex-row gap-2\"><!-- Track -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		trackBackgroundColor := "bg-neutral-50/5"
		if componentSettings.TrackBackgroundColor != "" {
			trackBackgroundColor = "bg-" + componentSettings.TrackBackgroundColor
		}
		if componentSettings.TrackBackgroundColorFrom != "" || componentSettings.TrackBackgroundColorVia != "" || componentSettings.TrackBackgroundColorTo != "" {
			trackBackgroundColor = "bg-gradient-to-r"
			if componentSettings.TrackBackgroundColorFrom != "" {
				trackBackgroundColor = trackBackgroundColor + " from-" + componentSettings.TrackBackgroundColorFrom
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 65, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackBackgroundColorVia != "" {
				trackBackgroundColor = trackBackgroundColor + " via-" + componentSettings.TrackBackgroundColorVia
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 66, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackBackgroundColorTo != "" {
				trackBackgroundColor = trackBackgroundColor + " to-" + componentSettings.TrackBackgroundColorTo
			}
		}
		var templ_7745c5c3_Var28 = []any{trackBackgroundColor + " flex items-center relative rounded-full w-full " + trackHeight}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var28...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 67, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var29 string
		templ_7745c5c3_Var29, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var28).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var29))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 68, "\"><!-- RangeInputs -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		rangeInputHoverHeight := 7
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			rangeInputHoverHeight = 3
		case RangeSliderSizeSm:
			rangeInputHoverHeight = 5
		case RangeSliderSizeMd:
			rangeInputHoverHeight = 7
		case RangeSliderSizeLg:
			rangeInputHoverHeight = 9
		case RangeSliderSizeXl:
			rangeInputHoverHeight = 11
		}
		if componentSettings.ThumbValueBubbleEnabled {
			rangeInputHoverHeight = rangeInputHoverHeight * 2
		}
		rangeInputHoverHeightStr := strconv.Itoa(rangeInputHoverHeight)
		rangeInputClasses := "absolute z-20 h-1.5 w-full cursor-pointer appearance-none opacity-0"
		inputEvent := "if (thumbValue <= trackStartValue) thumbValue = trackStartValue; if (thumbValue >= trackEndValue) thumbValue = trackEndValue;"
		if componentSettings.ThumbDualValueModeEnabled {
			inputEvent += "if (thumbUpperValue <= thumbValue) thumbUpperValue = Number(thumbValue) + Number(trackSteps);"
		}
		if componentSettings.ThumbValueTwoWayStatePath != "" {
			inputEvent += componentSettings.ThumbValueTwoWayStatePath + " = thumbValue"
		}
		var templ_7745c5c3_Var30 = []any{rangeInputClasses}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var30...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 69, "<input type=\"range\" class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var31 string
		templ_7745c5c3_Var31, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var30).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var31))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 70, "\" :min=\"trackStartValue\" :max=\"trackEndValue\" :step=\"trackSteps\" x-model.number:value=\"thumbValue\" @mouseenter=\"thumbHover = true\" @mouseleave=\"thumbHover = false\" @input.debounce.100ms=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var32 string
		templ_7745c5c3_Var32, templ_7745c5c3_Err = templ.JoinStringErrs(inputEvent)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 527, Col: 40}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var32))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 71, "\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbValueBubbleEnabled {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 72, " :class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var33 string
			templ_7745c5c3_Var33, templ_7745c5c3_Err = templ.JoinStringErrs("thumbHover && '!h-" + rangeInputHoverHeightStr + "'")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 529, Col: 69}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var33))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 73, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.ThumbDualValueModeEnabled {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 74, " :style=\"'pointer-events: ' + (thumbHover ? 'auto' : 'none');\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 75, "> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbDualValueModeEnabled {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 76, "<!-- RangeInputUpper --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			inputEvent := "if (thumbUpperValue <= trackStartValue) thumbUpperValue = trackStartValue; if (thumbUpperValue >= trackEndValue) thumbUpperValue = trackEndValue; if (thumbUpperValue <= thumbValue) thumbUpperValue = Number(thumbValue) + Number(trackSteps);"
			if componentSettings.ThumbUpperValueTwoWayStatePath != "" {
				inputEvent += componentSettings.ThumbUpperValueTwoWayStatePath + " = thumbUpperValue"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 77, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var34 = []any{rangeInputClasses}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var34...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 78, "<input type=\"range\" class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var35 string
			templ_7745c5c3_Var35, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var34).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var35))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 79, "\" :min=\"trackStartValue\" :max=\"trackEndValue\" :step=\"trackSteps\" x-model.number:value=\"thumbUpperValue\" @mouseenter=\"thumbUpperHover = true\" @mouseleave=\"thumbUpperHover = false\" @input.debounce.100ms=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var36 string
			templ_7745c5c3_Var36, templ_7745c5c3_Err = templ.JoinStringErrs(inputEvent)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 550, Col: 41}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var36))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 80, "\" :style=\"'pointer-events: ' + (thumbUpperHover ? 'auto' : 'none');\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbUpperValueBubbleEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 81, " :class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var37 string
				templ_7745c5c3_Var37, templ_7745c5c3_Err = templ.JoinStringErrs("thumbUpperHover && '!h-" + rangeInputHoverHeightStr + "'")
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 553, Col: 75}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var37))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 82, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 83, ">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 84, "<!-- TrackFill -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		trackFillColor := "bg-neutral-50/30"
		if componentSettings.TrackFillColor != "" {
			trackFillColor = "bg-" + componentSettings.TrackFillColor
		}
		if componentSettings.TrackFillColorFrom != "" || componentSettings.TrackFillColorVia != "" || componentSettings.TrackFillColorTo != "" {
			trackFillColor = "bg-gradient-to-r"
			if componentSettings.TrackFillColorFrom != "" {
				trackFillColor += " from-" + componentSettings.TrackFillColorFrom
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 85, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackFillColorVia != "" {
				trackFillColor += " via-" + componentSettings.TrackFillColorVia
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 86, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackFillColorTo != "" {
				trackFillColor += " to-" + componentSettings.TrackFillColorTo
			}
		}
		trackFillClass := "absolute inset-0 h-full rounded-full " + trackFillColor
		trackFillStyle := "'width: ' + thumbValuePercent + '%'"
		if componentSettings.ThumbDualValueModeEnabled {
			trackFillClass = "absolute inset-0 h-full rounded-full " + trackFillColor
			trackFillStyle = "'left: ' + thumbValuePercent + '%; right: ' + (100 - thumbUpperValuePercent) + '%'"
		}
		var templ_7745c5c3_Var38 = []any{trackFillClass}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var38...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 87, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var39 string
		templ_7745c5c3_Var39, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var38).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var39))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 88, "\" x-bind:style=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var40 string
		templ_7745c5c3_Var40, templ_7745c5c3_Err = templ.JoinStringErrs(trackFillStyle)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 580, Col: 64}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var40))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 89, "\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Thumb(componentSettings, false).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbDualValueModeEnabled {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 90, "<!-- ThumbUpper --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Thumb(componentSettings, true).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 91, "</div></div><!-- TrackEndValue -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.TrackEndValueLabelEnabled || componentSettings.TrackEndValueLabelIcon != "" {
			endLabelPosition := ""
			switch componentSettings.TrackEndValueLabelPosition {
			case RangeSliderTrackValueLabelPositionTop:
				endLabelPosition = "absolute right-0 bottom-full mb-1"
			case RangeSliderTrackValueLabelPositionBottom:
				endLabelPosition = "absolute right-0 top-full mt-1"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 92, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			endLabelTextColor := "text-neutral-400"
			if componentSettings.TrackEndValueLabelTextColor != "" {
				endLabelTextColor = "text-" + componentSettings.TrackEndValueLabelTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 93, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			endLabelIconSize := "text-lg"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				endLabelIconSize = "text-sm"
			case RangeSliderSizeSm:
				endLabelIconSize = "text-base"
			case RangeSliderSizeMd:
				endLabelIconSize = "text-lg"
			case RangeSliderSizeLg:
				endLabelIconSize = "text-xl"
			case RangeSliderSizeXl:
				endLabelIconSize = "text-2xl"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 94, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var41 = []any{endLabelPosition + " flex items-center text-xs gap-1 " + endLabelTextColor}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var41...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 95, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var42 string
			templ_7745c5c3_Var42, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var41).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var42))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 96, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackEndValueLabelIcon != "" {
				var templ_7745c5c3_Var43 = []any{"ph-bold " + componentSettings.TrackEndValueLabelIcon + " " + endLabelIconSize}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var43...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 97, "<i class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var44 string
				templ_7745c5c3_Var44, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var43).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var44))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 98, "\"></i> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.TrackEndValueLabelEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 99, "<span x-text=\"trackEndValue\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 100, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 101, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
