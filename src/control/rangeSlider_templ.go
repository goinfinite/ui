// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package uiControl

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

const (
	RangeSliderSizeXs string = "xs"
	RangeSliderSizeSm string = "sm"
	RangeSliderSizeMd string = "md"
	RangeSliderSizeLg string = "lg"
	RangeSliderSizeXl string = "xl"

	RangeSliderThumbShapeCircular string = "circular"
	RangeSliderThumbShapeRounded  string = "rounded"
	RangeSliderThumbShapeSquare   string = "square"

	RangeSliderThumbValueBubblePositionTop    string = "top"
	RangeSliderThumbValueBubblePositionBottom string = "bottom"

	RangeSliderThumbValueBubbleSizeXs string = "xs"
	RangeSliderThumbValueBubbleSizeSm string = "sm"
	RangeSliderThumbValueBubbleSizeMd string = "md"
	RangeSliderThumbValueBubbleSizeLg string = "lg"
	RangeSliderThumbValueBubbleSizeXl string = "xl"

	RangeSliderThumbValueBubbleShapeCircular string = "circular"
	RangeSliderThumbValueBubbleShapeRounded  string = "rounded"
	RangeSliderThumbValueBubbleShapeSquare   string = "square"

	RangeSliderThumbValueBubbleRingThicknessXs string = "xs"
	RangeSliderThumbValueBubbleRingThicknessSm string = "sm"
	RangeSliderThumbValueBubbleRingThicknessMd string = "md"
	RangeSliderThumbValueBubbleRingThicknessLg string = "lg"
	RangeSliderThumbValueBubbleRingThicknessXl string = "xl"

	RangeSliderTrackValueLabelPositionTop    string = "top"
	RangeSliderTrackValueLabelPositionBottom string = "bottom"
)

type RangeSliderSettings struct {
	// OptionalFields
	Size                            string
	ThumbLabel                      string
	ThumbLabelOneWayStatePath       string
	ThumbLabelIcon                  string
	ThumbBackgroundColor            string
	ThumbTextColor                  string
	ThumbShape                      string
	ThumbValue                      string
	ThumbValueTwoWayStatePath       string
	ThumbValueBubbleEnabled         bool
	ThumbValueBubbleBackgroundColor string
	ThumbValueBubbleTextColor       string
	ThumbValueBubbleRingColor       string
	ThumbValueBubbleRingThickness   string
	ThumbValueBubbleSize            string
	ThumbValueBubbleShape           string
	ThumbValueBubblePosition        string
	ThumbDualValueModeEnabled       bool
	TrackSteps                      string
	TrackStartValue                 string
	TrackStartValueOneWayStatePath  string
	TrackStartValueLabelEnabled     bool
	TrackStartValueLabelTextColor   string
	TrackStartValueLabelPosition    string
	TrackStartValueLabelIcon        string
	TrackEndValue                   string
	TrackEndValueOneWayStatePath    string
	TrackEndValueLabelEnabled       bool
	TrackEndValueLabelTextColor     string
	TrackEndValueLabelPosition      string
	TrackEndValueLabelIcon          string
}

func RangeSlider(componentSettings RangeSliderSettings) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- RangeSlider -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		thumbValue := "0"
		trackStartValue := "0"
		trackEndValue := "100"
		trackSteps := "1"
		if componentSettings.ThumbValue != "" {
			thumbValue = componentSettings.ThumbValue
		}
		if componentSettings.ThumbValueTwoWayStatePath != "" {
			thumbValue = componentSettings.ThumbValueTwoWayStatePath
		}
		if componentSettings.TrackStartValue != "" {
			trackStartValue = componentSettings.TrackStartValue
		}
		if componentSettings.TrackEndValueOneWayStatePath != "" {
			trackEndValue = componentSettings.TrackEndValueOneWayStatePath
		}
		if componentSettings.TrackEndValue != "" {
			trackEndValue = componentSettings.TrackEndValue
		}
		if componentSettings.TrackStartValueOneWayStatePath != "" {
			trackStartValue = componentSettings.TrackStartValueOneWayStatePath
		}
		if componentSettings.TrackSteps != "" {
			trackSteps = componentSettings.TrackSteps
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"flex w-full flex-col\" x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs("{sliderValue: " + thumbValue + ", startValue: " + trackStartValue + ", endValue: " + trackEndValue + ", steps: " + trackSteps + ", get sliderValuePercent() { return ((this.sliderValue - this.startValue) / (this.endValue - this.startValue)) * 100; }}")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 101, Col: 262}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"><div class=\"relative flex w-full flex-row items-center gap-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		trackHeight := "h-1.5"
		thumbSize := "w-4.5 h-4.5"
		thumbPosition := "-top-1.25"
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			trackHeight = "h-1"
			thumbSize = "w-2.5 h-2.5"
			thumbPosition = "-top-0.75"
		case RangeSliderSizeSm:
			trackHeight = "h-1.25"
			thumbSize = "w-3.5 h-3.5"
			thumbPosition = "-top-1.25"
		case RangeSliderSizeMd:
			trackHeight = "h-1.5"
			thumbSize = "w-4.5 h-4.5"
			thumbPosition = "-top-1.5"
		case RangeSliderSizeLg:
			trackHeight = "h-1.75"
			thumbSize = "w-5.5 h-5.5"
			thumbPosition = "-top-1.75"
		case RangeSliderSizeXl:
			trackHeight = "h-2"
			thumbSize = "w-6.5 h-6.5"
			thumbPosition = "-top-2"
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- TrackStartValue -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.TrackStartValueLabelEnabled || componentSettings.TrackStartValueLabelIcon != "" {
			startLabelPosition := ""
			switch componentSettings.TrackStartValueLabelPosition {
			case RangeSliderTrackValueLabelPositionTop:
				startLabelPosition = "absolute left-0 bottom-full mb-1"
			case RangeSliderTrackValueLabelPositionBottom:
				startLabelPosition = "absolute left-0 top-full mt-1"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			startLabelTextColor := "text-neutral-400"
			if componentSettings.TrackStartValueLabelTextColor != "" {
				startLabelTextColor = "text-" + componentSettings.TrackStartValueLabelTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 = []any{startLabelPosition + " flex items-center text-xs gap-1 " + startLabelTextColor}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var3...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var3).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			startLabelIconSize := "text-lg"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				startLabelIconSize = "text-sm"
			case RangeSliderSizeSm:
				startLabelIconSize = "text-md"
			case RangeSliderSizeMd:
				startLabelIconSize = "text-lg"
			case RangeSliderSizeLg:
				startLabelIconSize = "text-xl"
			case RangeSliderSizeXl:
				startLabelIconSize = "text-2xl"
			}
			if componentSettings.TrackStartValueLabelIcon != "" {
				var templ_7745c5c3_Var5 = []any{"ph-bold " + componentSettings.TrackStartValueLabelIcon + " " + startLabelIconSize}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var5...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<i class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var6 string
				templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var5).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\"></i> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.TrackStartValueLabelEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<span x-text=\"startValue\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<!-- Track&Thumb --><div class=\"group/thumb relative flex w-full flex-row gap-2\"><!-- TrackBackground -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 = []any{"bg-neutral-50/5 rounded-full w-full " + trackHeight}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var7...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var7).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\"><!-- TrackFill -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 = []any{"bg-neutral-50/30 rounded-full h-full"}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var9...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var10 string
		templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var9).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "\" x-bind:style=\"&#39;width: &#39; + ({{ if componentSettings.ThumbDualValueModeEnabled }}0{{ else }}sliderValuePercent{{ end }}) + &#39;%&#39;\"></div></div><!-- Thumb -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		thumbShape := "rounded-full"
		switch componentSettings.ThumbShape {
		case RangeSliderThumbShapeCircular:
			thumbShape = "rounded-full"
		case RangeSliderThumbShapeRounded:
			thumbShape = "rounded"
		case RangeSliderThumbShapeSquare:
			thumbShape = "rounded-none"
		}
		thumbBackgroundColor := "bg-neutral-50"
		if componentSettings.ThumbBackgroundColor != "" {
			thumbBackgroundColor = "bg-" + componentSettings.ThumbBackgroundColor
		}
		thumbTextColor := "text-neutral-800"
		if componentSettings.ThumbTextColor != "" {
			thumbTextColor = "text-" + componentSettings.ThumbTextColor
		}
		thumbLeftNegativeOffset := ".5rem"
		switch componentSettings.Size {
		case RangeSliderSizeXs:
			thumbLeftNegativeOffset = ".25rem"
		case RangeSliderSizeSm:
			thumbLeftNegativeOffset = ".375rem"
		case RangeSliderSizeMd:
			thumbLeftNegativeOffset = ".5rem"
		case RangeSliderSizeLg:
			thumbLeftNegativeOffset = ".625rem"
		case RangeSliderSizeXl:
			thumbLeftNegativeOffset = ".75rem"
		}
		var templ_7745c5c3_Var11 = []any{"absolute flex justify-center items-center " + thumbPosition + " " + thumbSize + " " + thumbShape + " " + thumbBackgroundColor + " " + thumbTextColor + " cursor-pointer shadow-md transition-transform group-hover/thumb:scale-115 group-hover/thumb:shadow-lg"}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var11...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var12 string
		templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var11).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "\" x-bind:style=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var13 string
		templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs("'left: calc(' + sliderValuePercent + '% - " + thumbLeftNegativeOffset + ")'")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 207, Col: 97}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbLabelIcon != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<!-- ThumbLabelIcon --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			thumbIconSize := "text-sm"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				thumbIconSize = "text-[0.5rem]"
			case RangeSliderSizeSm:
				thumbIconSize = "text-xs"
			case RangeSliderSizeMd:
				thumbIconSize = "text-sm"
			case RangeSliderSizeLg:
				thumbIconSize = "text-md"
			case RangeSliderSizeXl:
				thumbIconSize = "text-lg"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 = []any{"ph-bold " + componentSettings.ThumbLabelIcon + " flex h-full w-full items-center justify-center " + thumbIconSize}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var14...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<i class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var14).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "\"></i> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if componentSettings.ThumbLabel != "" || componentSettings.ThumbLabelOneWayStatePath != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "<!-- ThumbLabel --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			thumbLabelSize := "text-xs"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				thumbLabelSize = "text-[0.5rem]"
			case RangeSliderSizeSm:
				thumbLabelSize = "text-xs"
			case RangeSliderSizeMd:
				thumbLabelSize = "text-sm"
			case RangeSliderSizeLg:
				thumbLabelSize = "text-md"
			case RangeSliderSizeXl:
				thumbLabelSize = "text-lg"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 = []any{"flex h-full w-full items-center justify-center " + thumbLabelSize}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var16...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "<span class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var17 string
			templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var16).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.ThumbLabelOneWayStatePath != "" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "<span x-text=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var18 string
				templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.ThumbLabelOneWayStatePath)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 243, Col: 66}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				var templ_7745c5c3_Var19 string
				templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.ThumbLabel)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 245, Col: 38}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "<!-- ThumbValueBubble -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbValueBubbleEnabled {
			bubblePositionOffset := "7.5"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				bubblePositionOffset = "5.5"
			case RangeSliderSizeSm:
				bubblePositionOffset = "6.5"
			case RangeSliderSizeMd:
				bubblePositionOffset = "7.5"
			case RangeSliderSizeLg:
				bubblePositionOffset = "8.5"
			case RangeSliderSizeXl:
				bubblePositionOffset = "9.5"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			switch componentSettings.ThumbValueBubbleSize {
			case RangeSliderThumbValueBubbleSizeXs:
				bubblePositionOffset = "5.5"
			case RangeSliderThumbValueBubbleSizeSm:
				bubblePositionOffset = "6.5"
			case RangeSliderThumbValueBubbleSizeMd:
				bubblePositionOffset = "7.5"
			case RangeSliderThumbValueBubbleSizeLg:
				bubblePositionOffset = "8.5"
			case RangeSliderThumbValueBubbleSizeXl:
				bubblePositionOffset = "9.5"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubblePosition := "-top-" + bubblePositionOffset
			if componentSettings.ThumbValueBubblePosition == RangeSliderThumbValueBubblePositionBottom {
				bubblePosition = "-bottom-" + bubblePositionOffset
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleSize := "min-w-8 p-1 text-base"
			switch componentSettings.ThumbValueBubbleSize {
			case RangeSliderThumbValueBubbleSizeXs:
				bubbleSize = "min-w-6 p-0.5 text-xs"
			case RangeSliderThumbValueBubbleSizeSm:
				bubbleSize = "min-w-7 p-0.75 text-sm"
			case RangeSliderThumbValueBubbleSizeMd:
				bubbleSize = "min-w-8 p-1 text-base"
			case RangeSliderThumbValueBubbleSizeLg:
				bubbleSize = "min-w-10 p-1.5 text-lg"
			case RangeSliderThumbValueBubbleSizeXl:
				bubbleSize = "min-w-12 p-2 text-xl"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleShape := "rounded-full"
			switch componentSettings.ThumbValueBubbleShape {
			case RangeSliderThumbValueBubbleShapeCircular:
				bubbleShape = "rounded-full"
			case RangeSliderThumbValueBubbleShapeRounded:
				bubbleShape = "rounded"
			case RangeSliderThumbValueBubbleShapeSquare:
				bubbleShape = "rounded-none"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleBackgroundColor := "bg-neutral-800"
			if componentSettings.ThumbValueBubbleBackgroundColor != "" {
				bubbleBackgroundColor = "bg-" + componentSettings.ThumbValueBubbleBackgroundColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleTextColor := "text-neutral-50"
			if componentSettings.ThumbValueBubbleTextColor != "" {
				bubbleTextColor = "text-" + componentSettings.ThumbValueBubbleTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			bubbleRingClasses := ""
			if componentSettings.ThumbValueBubbleRingColor != "" {
				bubbleRingThickness := "ring-1"
				switch componentSettings.ThumbValueBubbleRingThickness {
				case RangeSliderThumbValueBubbleRingThicknessXs:
					bubbleRingThickness = "ring-0.5"
				case RangeSliderThumbValueBubbleRingThicknessSm:
					bubbleRingThickness = "ring-1"
				case RangeSliderThumbValueBubbleRingThicknessMd:
					bubbleRingThickness = "ring-1.5"
				case RangeSliderThumbValueBubbleRingThicknessLg:
					bubbleRingThickness = "ring-2"
				case RangeSliderThumbValueBubbleRingThicknessXl:
					bubbleRingThickness = "ring-2.5"
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				bubbleRingClasses = bubbleRingThickness + " ring-" + componentSettings.ThumbValueBubbleRingColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var20 = []any{"absolute " + bubblePosition + " select-none flex items-center justify-center " + bubbleSize + " " + bubbleShape + " " + bubbleBackgroundColor + " " + bubbleTextColor + " " + bubbleRingClasses}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var20...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var21 string
			templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var20).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, "\" x-text=\"sliderValue\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "</div><!-- RangeInput (Hidden but functional) --><input type=\"range\" class=\"absolute inset-0 h-full w-full cursor-pointer opacity-0\" :min=\"startValue\" :max=\"endValue\" :step=\"steps\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.ThumbValueTwoWayStatePath != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, " x-model=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var22 string
			templ_7745c5c3_Var22, templ_7745c5c3_Err = templ.JoinStringErrs(componentSettings.ThumbValueTwoWayStatePath)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 341, Col: 59}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, " x-model=\"sliderValue\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 48, "></div><!-- TrackEndValue -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if componentSettings.TrackEndValueLabelEnabled || componentSettings.TrackEndValueLabelIcon != "" {
			endLabelPosition := ""
			switch componentSettings.TrackEndValueLabelPosition {
			case RangeSliderTrackValueLabelPositionTop:
				endLabelPosition = "absolute right-0 bottom-full mb-1"
			case RangeSliderTrackValueLabelPositionBottom:
				endLabelPosition = "absolute right-0 top-full mt-1"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 49, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			endLabelTextColor := "text-neutral-400"
			if componentSettings.TrackEndValueLabelTextColor != "" {
				endLabelTextColor = "text-" + componentSettings.TrackEndValueLabelTextColor
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 50, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			endLabelIconSize := "text-lg"
			switch componentSettings.Size {
			case RangeSliderSizeXs:
				endLabelIconSize = "text-sm"
			case RangeSliderSizeSm:
				endLabelIconSize = "text-md"
			case RangeSliderSizeMd:
				endLabelIconSize = "text-lg"
			case RangeSliderSizeLg:
				endLabelIconSize = "text-xl"
			case RangeSliderSizeXl:
				endLabelIconSize = "text-2xl"
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 51, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var23 = []any{endLabelPosition + " flex items-center text-xs gap-1 " + endLabelTextColor}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var23...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 52, "<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var24 string
			templ_7745c5c3_Var24, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var23).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var24))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 53, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if componentSettings.TrackEndValueLabelIcon != "" {
				var templ_7745c5c3_Var25 = []any{"ph-bold " + componentSettings.TrackEndValueLabelIcon + " " + endLabelIconSize}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var25...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 54, "<i class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var26 string
				templ_7745c5c3_Var26, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var25).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/control/rangeSlider.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var26))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 55, "\"></i> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if componentSettings.TrackEndValueLabelEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 56, "<span x-text=\"endValue\"></span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 57, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 58, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
